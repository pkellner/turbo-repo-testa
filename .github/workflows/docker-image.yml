name: Build Web App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: my-turborepo

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            node_modules
            apps/web/node_modules
            packages/shared/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build shared package
        run: npm run build 

      - name: Run step if any of the listed files above change    # UPDATE
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        env:
          GH_TOKEN: ${{secrets.GH_TOKEN}}
          GH_USERNAME: ${{secrets.GH_USERNAME}}
        run: |
          RELEASEVERSION=1.05
          # RELEASEVERSION=$(cat version.txt)
          # https://github.community/t/wanting-to-add-ÃŸa-build-date-and-time-to-my-github-action/220185/6'
          #
          RELEASEDATE1=$(date +"%m/%d/%YT%H:%M:%S%p")
          RELEASEDATE=$(TZ=":US/Pacific" date +%c)
          # https://unix.stackexchange.com/questions/164826/date-command-iso-8601-option
          RELEASEDATEISO=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          #
          # removes any previous lines that might have contained VERSION or DATE (not tested)
          perl -ni -e 'next if /^RELEASE(?:VERSION|DATE)=/;print' .env.production
          # record in `.env.production`
          (
          echo "RELEASEVERSION=$RELEASEVERSION"
          echo "RELEASEDATE=$RELEASEDATE"
          echo "RELEASEDATEISO=$RELEASEDATEISO"
          ) >> .env.production
          #
          cat .env.production
          echo "above is .env.production."
          #
          #
          #          echo "news-fairness@peterkellner.net mysqlsecure" | sudo tee -a /etc/hosts
          #          cat /etc/hosts
          #          echo "etc/hosts above should include mysqlsecure."
          #
          echo "Docker testgo changed so building then pushing..."
          echo $GH_TOKEN | docker login ghcr.io -u $GH_USERNAME --password-stdin &
          docker build . --file Dockerfile --tag ghcr.io/pkellner/testgo:latest --tag ghcr.io/pkellner/testgo:$RELEASEVERSION 
          docker push ghcr.io/pkellner/testgo --all-tags
          

