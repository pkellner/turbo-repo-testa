name: gtoi-process-mail-queue-web

on:
  push:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest  # windows-latest | macos-latest
    defaults:
      run:
        working-directory: process-mail-queue-web   # UPDATE

    name: docker build if docker file changed
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files using defaults
        id: changed-files
        uses: tj-actions/changed-files@v35

      - name: Get changed files using a comma separator
        id: changed-files-comma
        uses: tj-actions/changed-files@v35
        with:
          separator: ","

      - name: Get changed action file
        id: changed-files-specific
        uses: tj-actions/changed-files@v35
        with:  # UPDATE
          files: |
            .github/workflows/process-mail-queue-web.yml

      - name: Run step if any of the listed files above change    # UPDATE
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        env:
          GH_TOKEN: ${{secrets.GH_TOKEN}}
          GH_USERNAME: ${{secrets.GH_USERNAME}}
          DATABASE_URL_EXTERNAL: ${{secrets.DATABASE_URL_EXTERNAL}}
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          RELEASEVERSION: "1.14A"
        run: |
          RELEASEVERSION=1.11
          # RELEASEVERSION=$(cat version.txt)
          # https://github.community/t/wanting-to-add-a-build-date-and-time-to-my-github-action/220185/6'
          #
          RELEASEDATE1=$(date +"%m/%d/%YT%H:%M:%S%p")
          RELEASEDATE=$(TZ=":US/Pacific" date +%c)
          # https://unix.stackexchange.com/questions/164826/date-command-iso-8601-option
          RELEASEDATEISO=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          #
          # removes any previous lines that might have contained VERSION or DATE (not tested)
          perl -ni -e 'next if /^RELEASE(?:VERSION|DATE)=/;print' .env.production
          # record in `.env.production`
          (
          echo "RELEASEVERSION=$RELEASEVERSION"
          echo "RELEASEDATE=$RELEASEDATE"
          echo "RELEASEDATEISO=$RELEASEDATEISO"
          ) >> .env.production
          #
          cat .env.production
          echo "above is .env.production."
          #
          #
          #          echo "emailsend@peterkellner.net mysqlsecure" | sudo tee -a /etc/hosts
          #          cat /etc/hosts
          #          echo "etc/hosts above should include mysqlsecure."
          #
          echo $GH_TOKEN | docker login ghcr.io -u $GH_USERNAME --password-stdin &
          docker build --build-arg DATABASE_URL=$DATABASE_URL_EXTERNAL --build-arg GITHUB_ACTION=true . --file Dockerfile --tag ghcr.io/pkellner/gtoi-process-mail-queue-web:latest --tag ghcr.io/pkellner/gtoi-process-mail-queue-web:$RELEASEVERSION 
          docker push ghcr.io/pkellner/gtoi-process-mail-queue-web --all-tags
          
